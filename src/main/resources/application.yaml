server:
  port: 9000

custom:
  server-ip: localhost

spring:
  config:
    import: "configserver:http://${custom.server-ip}:9005"
  application:
    name: API-GATEWAY
  boot:
    admin:
      client:
        url: http://${custom.server-ip}:8762
        instance:
          service-base-url: http://127.0.0.1:${server.port}
          name: ${spring.application.name}
  datasource:
    url: jdbc:mysql://${custom.server-ip}:3306/microservices?allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: password
  jpa:
    defer-datasource-initialization: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: false
    hibernate:
      ddl-auto: update
  cloud:
    gateway:
#      routes:
#        - id: USER-SERVICE
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user/**
#          filters:
#            - name: AuthFilter
#              args:
#                name: USER-SERVICE
#                fallbackuri: forward:/user-service-fallback
#        - id: TRACKER-SERVICE
#          uri: lb://TRACKER-SERVICE
#          predicates:
#            - Path=/tracker/**
#          filters:
#            - name: AuthFilter
#              args:
#                name: TRACKER-SERVICE
#                fallbackuri: forward:/tracker-service-fallback
#        - id: AUTH-SERVICE
#          uri: lb://AUTH-SERVICE
#          predicates:
#            - Path=/auth/**
#          filters:
#            - name: CircuitBreaker
#              args:
#                name: AUTH-SERVICE
#                fallbackuri: forward:/auth-fallback
      discovery:
        locator:
          enabled: true
      httpclient:
        response-timeout: 300000

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
      readiness-state:
          enabled: true
      liveness-state:
          enabled: true
  endpoint:
    pause:
        enabled: true
    health:
      show-details: always
    info:
      enabled: true
    metrics:
      enabled: true
    env:
      enabled: true

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${custom.server-ip}:8761/eureka/
  instance:
    hostname: ${custom.server-ip}

